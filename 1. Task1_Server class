package server;

import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.*;

/**
 * @author ilnaz-92@yandex.ru
 * Created on 2019-03-04
 */


public class Server
{
  private List<ClientHandler> clientHandlers = new ArrayList<>();
  private Logger sl;


  public Server(Logger sl)
  {
    this.sl = sl;
    ServerSocket serverSocket = null;
    Socket clientSocket = null;
    try
    {
      serverSocket = new ServerSocket(8899);
      //System.out.println("Server launched");
      loggingServer(sl,"Server launched", 'i');

      while (true)
      {
        clientSocket = serverSocket.accept();
        ClientHandler client = new ClientHandler(clientSocket, this, sl);
        clientHandlers.add(client);
        new Thread(client).start();
      }
    }
    catch (Exception e)
    {
      e.printStackTrace();
      loggingServer(sl,"Couldn't start server!", 'e');
    }
    finally
    {
      try
      {
        serverSocket.close();
        clientSocket.close();
        //System.out.println("Server finished");
        loggingServer(sl,"Server finished", 'i');
      }
      catch (Exception e)
      {
        e.printStackTrace();
        loggingServer(sl,"Ooops, something wrong with server shutdown", 'e');
      }
    }


  }

  public void notificationAllClientWithNewMessage(String msg, Logger sl)
  {
    for (ClientHandler clientHandler : clientHandlers)
    {
      clientHandler.sendMessage(msg);
    }

  }

  public void removeClient(ClientHandler clientHandler, Logger sl)
  {
    clientHandlers.remove(clientHandler);
    loggingServer(sl, "ClientHandler was removed: " + clientHandler.toString(), 'i');
  }

  public void loggingServer (Logger sl, String text, char typeOfMessage) {
    if (typeOfMessage == 'e') {
      sl.log(Level.WARNING, text);
    } else {
      sl.log(Level.INFO, text);
    }
  }


}
